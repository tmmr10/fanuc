Versioninformationen

0.5.0	Block sending:
	neue Nachrichten Syntax! Neue Server Client Kommunikation!
	Nachkommastelle bis :  Eine! Somit erreichte Genauigkeit bis auf 0.1mm (Auflösung von 0.1mm)

	!! Nachrichten mit Größe über 127 Bytes werden als Fehler zurück gemeldet !!
	
	Server-Client-Kommunukation :
		1. Client : Send Msg an Server ( Keyword zur zu nutzenden Funktion, z.B. move_via_piui oder shutdown_server)
		2. Server : Test Comand -> bereite Funktionalität vor
		3. Server : Answer acknowledge/failure -> "ack"/ "fail_[failmsg]" 
		4. Client : Check Answer -> Timeout falls keine Nachricht kommt
		5. Client : Send z.b. Koordinaten Pakete
		6. Server :  Busy Working ... ...  send "ack"/"fail_[failmsg]"
			.
			.
			.
		N. Server : Busy Working ... ... send "ack"/"fail_[failmsg]"
		N+1 Client: Send Msg, Ende erreicht. "finished"  

0.4.2	bug fix vom einlesen der positionen in das PosReg. 
	Bestehendes Problem: READ und WRITE sind begrenzt, was über die kapazität von READ oder WRITE geht, 
			     wird in einen Puffer geschrieben, der wiederum auf 256Byte begrenzt ist

0.4.1.1	Berücksichtigung des Maximalen Postitionsregister Platzes von 100 Registern -> nach 100 eingelesenen Pos, alle anfahren und weiter einlesen

0.4.1	Client schickt mehrere Koordinaten (in einer Nachricht), welche vom Server verarbeitet und angefahren werden.
	Nachrichtenformat: commandXYZ|XYZ|XYZ|[..]|XYZ; 	-> command ist 5 Zeichen Sstring, welcher ankündigt, 
								   wie die Nachricht zu verarbeiten ist
								   XYZ können REAL Zahlen sein 
	k.a. :( koord10|10|-10|L;20|20|-20|L;
	//z-achse: negativ ist eher positiv ;)


0.4.0	Server schreibt selbst Koordinaten ins PosRegister und Anfahrdaten ins Register; TP-Programm fährt diese an

0.3.0	Server reagiert kontrolliert auf Disconnects vom Client (bleibt offen für neuen Verbindungsversuch)

0.2.4	Client kann mehrere Nachrichten an den Server schicken, der diese einzeln Verarbeiten kann

0.2.3	Client kann eine Benutzereingabe an den Server schicken 



Wireframe https://gomockingbird.com/projects/xzkcwyt/njJdlZ

troubleshooting website fanuc: http://wiki.ros.org/fanuc_driver/Troubleshooting


6*3+3+1+1= 23
127*23 = 5
