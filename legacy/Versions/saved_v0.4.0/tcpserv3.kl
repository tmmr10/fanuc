PROGRAM tcpserv3
%STACKSIZE = 4000
%NOLOCKGROUP
%NOPAUSE=ERROR+COMMAND+TPENABLE
%ENVIRONMENT uif
%ENVIRONMENT sysdef
%ENVIRONMENT memo
%ENVIRONMENT kclop
%ENVIRONMENT bynam
%ENVIRONMENT fdev
%ENVIRONMENT flbt
%ENVIRONMENT REGOPE
%INCLUDE klevccdf
%INCLUDE klevkeys
%INCLUDE klevkmsk


-------------------------------------------------------------------------------

VAR
	file_var : FILE
	tmp_int : INTEGER
	tmp_int1 : INTEGER
	tmp_str : STRING[128]
	tmp_str1 : STRING[128]
	status : INTEGER
	entry : INTEGER
	length : INTEGER
	loop : BOOLEAN
	running : BOOLEAN
	--msg_recieved : BOOLEAN
	Version : String[128]
	prog_index : INTEGER
	pos1 : XYZWPR
	pos2 : XYZWPR
	pos3 : XYZWPR
	pos1_j : JOINTPOS
	pos2_j : JOINTPOS
	pos3_j : JOINTPOS
-------------------------------------------------------------------------------
--routine zum lesen des Eingangsstreams und schreiben ins (Positions)Registers
ROUTINE koord_empf
BEGIN
	--Registers füllen
		--anzahl der punkte übergeben
		SET_INT_REG(101, 3, status)  
	
		--Bits geben an, ob es Linear oder Joint bewegen soll
		SET_INT_REG(1, 0, status)
		SET_INT_REG(2, 1, status)
	
	--PosRegister füllen
		pos1 = curpos(0,0)
		pos1.x = -30
		pos1.y = 10
		pos1.z = -40
		pos1.w = 30
		pos1.p = 0
		pos1.r = 180
		pos1_j = pos1
		SET_POS_REG(1, pos1, status)
		pos1.x = pos1.x + 60
		SET_POS_REG(2, pos1, status)
		pos1.y = pos1.y - 40
		SET_POS_REG(3, pos1, status)
	
	--TP_Programm vom Christian aufrufen
		CALL_PROG('KAREL_MOVER', prog_index)
END koord_empf

BEGIN
	Version = '0.4.0'
	WRITE ('Server start v', Version, cr)
	running = TRUE	
	WHILE running DO
		SET_FILE_ATR(file_var, ATR_IA)
		-- set the server port before doing a connect
		SET_VAR(entry, '*SYSTEM*','$HOSTS_CFG[3].$SERVER_PORT',59002,status)
		MSG_CONNECT('S3:',status)
		WRITE('Connect Status = ',status,cr)
		IF status = 0 THEN
			-- Open S3:
			OPEN FILE file_var ('rw','S3:')
			status = IO_STATUS(file_var)
			WRITE ('Open File status: ',status,cr)
			IF status = 0 THEN
				loop = TRUE
				WHILE loop = TRUE DO
					BYTES_AHEAD(file_var, length, status)	
					
					IF status <> 0 THEN
						--WRITE('Reading File failed..',cr)				
						IF status = 67212 THEN
							loop = FALSE
						ENDIF
					ELSE
						IF length = 0 THEN
							--WRITE('No bytes to read..',cr)
						ELSE
							--Verarbeitung der Übergabe
							WRITE('Bytes available to read:', length,' status:', status, cr)
							READ file_var (tmp_str::length)
							status = IO_STATUS(file_var)
							WRITE ('Nachricht:', tmp_str::length, cr)
							IF tmp_str = 'close' THEN
								loop = FALSE
								running = FALSE
							ENDIF
							IF tmp_str = 'move' THEN
								--es ist komplett egal, welchen Wert prog_index hat
								CALL_PROG('KAREL_MOVER', prog_index)
							ENDIF
							IF tmp_str='Koordinaten' THEN
								--erwarte Stream von Koordinaten
								--erwartet eine Nachricht mit der Anzahl der Punkte am Anfang; Values sind durch ';' voneinander getrennt
								koord_empf
								--SET_INT_REG(1, 0, status2)
							ENDIF
						ENDIF
					ENDIF
					delay 700
				ENDWHILE
				CLOSE FILE file_var
			ENDIF

			WRITE('Disconnecting..',cr)
			MSG_DISCO('S3:',status)
		ELSE
			MSG_DISCO('S3:',status)
			WRITE('Disconnecting..',cr)
		ENDIF
	ENDWHILE
END tcpserv3